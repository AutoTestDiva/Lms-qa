name: Java CI with Gradle [UBUNTU]

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 15
        uses: actions/setup-java@v4
        with:
            distribution: 'adopt'
            java-version: '15'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install dependencies
        run: sudo apt-get install -y xvfb x11-utils

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1920x1080x24 &
        env:
          DISPLAY: :99

      - name: Verify Xvfb
        run: xdpyinfo | grep dimensions
        env:
          DISPLAY: :99

      - name: Get application.yml from secrets and decode it
        run: |
          echo "DB_URL: ${{ secrets.DB_URL }}" > ./src/test/resources/application.yml
          echo "DB_USER_NAME: ${{ secrets.DB_USER_NAME }}" >> ./src/test/resources/application.yml
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}" >> ./src/test/resources/application.yml

      - name: Build with Gradle
        run: ./gradlew clean qa -Psuite4
        env:
          DISPLAY: :99

      - name: List files in test reports directory
        run: ls -la build/reports/tests/qa

      - name: Save test report as artifact
        if: success()  # Сохраняем отчёт только в случае успешной сборки
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: build/reports/tests/qa/index.html  # Укажите правильный путь к вашему отчёту

      - name: Send test report via email
        if: success()  # Отправляем письмо только в случае успешного сохранения артефакта
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USERNAME: ${{ secrets.EMAIL_USERNAME }}  # Ваш адрес Gmail
          SMTP_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}  # Пароль от вашего Gmail аккаунта
          TO_EMAIL: pnata1978@gmail.com  # Адрес получателя
          FROM_EMAIL: ${{ secrets.EMAIL_USERNAME }}  # Ваш адрес Gmail, от имени которого будет отправлено письмо
        run: |
          echo "Sending test report via email"
          (
            echo "From: $FROM_EMAIL"
            echo "To: $TO_EMAIL"
            echo "Subject: Test Report"
            echo "MIME-Version: 1.0"
            echo 'Content-Type: multipart/mixed; boundary="BOUNDARY"'
            echo ""
            echo "--BOUNDARY"
            echo "Content-Type: text/plain; charset=UTF-8"
            echo ""
            echo "Attached are the test results."
            echo ""
            echo "--BOUNDARY"
            echo "Content-Type: text/html; charset=UTF-8"
            echo "Content-Disposition: attachment; filename=test_report.html"
            echo ""
            cat $GITHUB_WORKSPACE/build/reports/tests/qa/index.html  # Используем путь к артефакту
            echo ""
            echo "--BOUNDARY--"
          ) | curl -sS --url "smtp://$SMTP_SERVER:$SMTP_PORT" \
                     --ssl-reqd \
                     --mail-from "$FROM_EMAIL" \
                     --mail-rcpt "$TO_EMAIL" \
                     --user "$SMTP_USERNAME:$SMTP_PASSWORD" \
                     --upload-file -

#    - name: Deploy
#      run: echo 'Deploying...'
