name: Java CI with Gradle (JDK 15, Gradle 8.3)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Установка JDK 15
        uses: actions/setup-java@v3
        with:
          java-version: '15'
          distribution: 'adopt'

      # Установка Node.js
      - name: ✅ ⚙️ Установить Node версии "20"
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ❎ ⌛ Проверить версию Node
        run: node --version

      - name: Настройка Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.3'

      - name: Установка Google Chrome и ChromeDriver
        run: |
            # Обновляем список пакетов и устанавливаем Google Chrome
            sudo apt update
            sudo apt install -y google-chrome-stable
            
            # Скачиваем и распаковываем нужную версию ChromeDriver
            wget -P /tmp https://storage.googleapis.com/chrome-for-testing/125.0.6422.60/linux64/chromedriver-linux64.zip
            sudo unzip /tmp/chromedriver-linux64.zip -d /usr/local/bin/
            
            # Перемещаем ChromeDriver в правильное место и устанавливаем права доступа
            sudo mv /usr/local/bin/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
            sudo chmod +x /usr/local/bin/chromedriver
            
            # Устанавливаем переменные окружения для Chrome и ChromeDriver
            echo "CHROME_BIN=/usr/bin/google-chrome" >> $GITHUB_ENV
            echo "CHROME_DRIVER=/usr/local/bin/chromedriver" >> $GITHUB_ENV
            
            # Проверяем установку ChromeDriver
            /usr/local/bin/chromedriver --version
      

      - name: ✅ ⚙️ Установить права на выполнение для gradlew
        run: chmod +x gradlew

      - name: Получение application.yml из секретов и декодирование
        run: |
          echo "${{ secrets.DB_URL }}"  >> ./src/test/resources/application.yml
          echo "${{ secrets.DB_USER_NAME }}"  >> ./src/test/resources/application.yml
          echo "${{ secrets.DB_PASSWORD }}"  >> ./src/test/resources/application.yml

      - name: Запуск тестов
        run: |
          ./gradlew clean qa -Psuite4 --info --stacktrace | tee result4.log || true
        continue-on-error: true

      - name: Проверка наличия и содержимого файла журнала
        run: |
          if [ ! -s result4.log ]; then
            echo "Файл журнала пуст или не существует" >&2
            exit 1
          fi

      - name: Загрузка отчета о тестировании
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: result4.log

      - name: Deploy
        run: echo 'Deploying...'
