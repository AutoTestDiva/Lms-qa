name: Java CI with Gradle [UBUNTU]

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 15
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Check Java version
        run: java -version

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install dependencies
        run: sudo apt-get install -y xvfb x11-utils


      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1920x1080x24 &
        env:
          DISPLAY: :99

      - name: Verify Xvfb
        run: xdpyinfo | grep dimensions
        env:
          DISPLAY: :99

      - name: Get application.yml from secrets and decode it
        run: |
          echo "DB_URL: ${{ secrets.DB_URL }}" > ./src/test/resources/application.yml
          echo "DB_USER_NAME: ${{ secrets.DB_USER_NAME }}" >> ./src/test/resources/application.yml
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}" >> ./src/test/resources/application.yml

      - name: Build with Gradle
        run: ./gradlew clean qa -Psuite4
        env:
          DISPLAY: :99

      - name: List files in test reports directory
        run: ls -la build/reports/tests/qa

      - name: Check if log file exists and has content
        run: |
          if [ ! -s build/reports/tests/qa/index.html ]; then
            echo "Log file is empty or does not exist" >&2
            exit 1
          fi


      - name: Send email with HTML file content
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: GitHub Actions - Test Report Content
          to: pnata1978@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/plain
          body: |
            echo "Sending test report via email"
            echo -e "Subject: Test Report\r\n\r\nAttached are the test results." > message.txt
            echo -e "--BOUNDARY\r\nContent-Type: text/html\r\nContent-Disposition: attachment; filename=test_report.html\r\n\r\n$(cat build/reports/tests/index.html)\r\n\r\n--BOUNDARY--" > attachment.txt
            cat message.txt attachment.txt | curl --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd --mail-from "$FROM_EMAIL" --mail-rcpt "$TO_EMAIL" --user "$SMTP_USERNAME:$SMTP_PASSWORD" --insecure --upload-file -
#
#    - name: Deploy
#      run: echo 'Deploying...'
