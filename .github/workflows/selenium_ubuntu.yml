name: Java CI with Gradle [UBUNTU]

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 15
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Check Java version
        run: java -version

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install dependencies
        run: sudo apt-get install -y xvfb x11-utils

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1920x1080x24 &
        env:
          DISPLAY: :99

      - name: Verify Xvfb
        run: xdpyinfo | grep dimensions
        env:
          DISPLAY: :99

      - name: Get application.yml from secrets and decode it
        run: |
          echo "DB_URL: ${{ secrets.DB_URL }}" > ./src/test/resources/application.yml
          echo "DB_USER_NAME: ${{ secrets.DB_USER_NAME }}" >> ./src/test/resources/application.yml
          echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}" >> ./src/test/resources/application.yml

      - name: Build with Gradle
        run: ./gradlew clean qa -Psuite4
        env:
          DISPLAY: :99

      - name: List files in test reports directory
        run: ls -la build/reports/tests/qa

      - name: Check if log file exists and has content
        run: |
          if [ ! -s build/reports/tests/qa/index.html ]; then
            echo "Log file is empty or does not exist" >&2
            exit 1
          fi

      - name: Extract test results
        id: test-result
        run: |
          #!/bin/bash

          # Read the HTML content into a variable
          html_content=$(cat build/reports/tests/qa/index.html)

          # Use awk to parse the HTML content
          total_tests=$(echo "$html_content" | awk -F'[<>]' '/<div class="counter">/{print $3; exit}')
          total_failures=$(echo "$html_content" | awk -F'[<>]' '/<div class="counter">/{getline; getline; print $3; exit}')
          total_ignored=$(echo "$html_content" | awk -F'[<>]' '/<div class="counter">/{getline; getline; getline; getline; print $3; exit}')
          duration=$(echo "$html_content" | awk -F'[<>]' '/<div class="counter">/{getline; getline; getline; getline; getline; getline; print $3; exit}')
          success_rate=$(echo "$html_content" | awk -F'[<>]' '/<div class="percent">/{print $3; exit}')

          # Check if extracted values are empty
          if [ -z "$total_tests" ] || [ -z "$total_failures" ] || [ -z "$total_ignored" ] || [ -z "$duration" ] || [ -z "$success_rate" ]; then
            echo "Error: One or more values could not be extracted."
            exit 1
          fi

          # Output the extracted data
          echo "Total tests: $total_tests"
          echo "Total failures: $total_failures"
          echo "Total ignored: $total_ignored"
          echo "Duration: $duration"
          echo "Success rate: $success_rate"

          # Setting outputs
          echo "summary=Total Tests: $total_tests, Failures: $total_failures, Ignored: $total_ignored, Duration: $duration, Success Rate: $success_rate" >> $GITHUB_ENV

          echo "Script completed successfully."
      

      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: GitHub Actions - Test Report
          to: pnata1978@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          content_type: text/html
          body: |
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Test Results</title>
              <style>
                body {
                  font-family: Arial, sans-serif;
                  background-color: #f4f4f4;
                  color: #333;
                  margin: 0;
                  padding: 20px;
                }
                .container {
                  background-color: #fff;
                  border-radius: 5px;
                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                  padding: 20px;
                  margin: 20px auto;
                  max-width: 90%;
                  box-sizing: border-box;
                }
                h1 {
                  color: #0073e6;
                }
                table {
                  width: 100%;
                  border-collapse: collapse;
                  margin-top: 20px;
                }
                th, td {
                  padding: 10px;
                  border: 1px solid #ddd;
                  text-align: left;
                  word-wrap: break-word;
                }
                th {
                  background-color: #f4f4f4;
                }
                .success {
                  color: green;
                }
                .failure {
                  color: red;
                }
              </style>
            </head>
            <body>
            <div class="container">
              <h1>Test Summary</h1>
              <table>
                ${{ steps.test-result.outputs.summary }}
              </table>
              <h2>Package Results</h2>
              <table>
                <thead>
                  <tr>
                    <th>Package</th>
                    <th>Tests</th>
                    <th>Failures</th>
                    <th>Ignored</th>
                    <th>Duration</th>
                  </tr>
                </thead>
                <tbody>
                  ${{ steps.test-result.outputs.package_summary }}
                </tbody>
              </table>
              <h2>Class Results</h2>
              <table>
                <thead>
                  <tr>
                    <th>Class</th>
                    <th>Tests</th>
                    <th>Failures</th>
                    <th>Ignored</th>
                    <th>Duration


#
#    - name: Deploy
#      run: echo 'Deploying...'
